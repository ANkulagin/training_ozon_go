package main

import "fmt"

func main() {
	ch := make(chan int)
	<-ch
	// Программа вызовет ошибку во время выполнения из-за блокировки на операции чтения из пустого (небуферизованного) канала. Когда вы пытаетесь читать из канала, который еще ни разу не был записан, горутина будет заблокирована, ожидая записи в канал.Если вы хотите избежать блокировки, вам нужно либо записать значение в канал, перед тем как читать из него, либо использовать буферизованный канал
}
func main1() {
	select {}
	fmt.Println("finish")
	//Проблема в том, что строка fmt.Println("finish") никогда не выполнится. Функция select{} создает бесконечный цикл, который будет блокировать выполнение программы. select{} используется для блокирования до тех пор, пока не будет готово несколько операций ввода-вывода (или других операций). В данном случае у вас нет других операций, и select{} просто ожидает.Если вы хотите, чтобы fmt.Println("finish") был выполнен, вам нужно разместить его перед select{} или в каком-то другом месте, но обязательно после select{}, если вы не хотите, чтобы он был недостижимым кодом. 
}
